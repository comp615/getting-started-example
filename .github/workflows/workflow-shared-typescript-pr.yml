name: Typescript Mixer PR workflow
run-name: Typescript Monorepo PR workflow (${{ github.ref }})
on:
  pull_request:
    types: [opened, synchronize, closed]
    branches:
      - main
# Cancel outdated jobs when an open PR is updated
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  pull-requests: write

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
        # commons: cache_check
        - name: Check out repo code (with history)
          uses: actions/checkout@v3
          with:
            fetch-depth: 50
        # Only install dependencies if cache does not exist
        - name: Install dependencies
          # if: steps.cache.outputs.cache-hit != 'true'
          run: npm i
        - name: Check for dirty git (may indicate dev did not run npm install)
          # if: steps.cache.outputs.cache-hit != 'true'
          run: git diff --exit-code
        # commons: build
        # commons: typecheck needs build
        - name: Typecheck
          run: npx lerna run build
        - name: Release CI Stuff
          run: echo ${{ github.ref }} && echo ${{ github.head }} && echo ${{ github.merge_commit_sha }} && echo ${{ github.event.pull_request.merged == true }}
        - name: Release pre-merge (Does not support amended commits)
          if: github.event.pull_request.merged != true
          run: npx lerna publish --canary --yes --preid ci.${{ github.event.number }} --dist-tag ci --summary-file --loglevel silly
        - name: Release post-merge
          if: github.event.pull_request.merged
          run: npx lerna publish --canary --dist-tag canary --summary-file --yes
        - name: Echo output
          id: generate-message
          run: |
            DELIMITER=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)

            # Output Jest variables
            echo "message<<$DELIMITER" >> $GITHUB_OUTPUT
            echo "**Packages published for testing**:" >> $GITHUB_OUTPUT
            echo "| Package | Version |" >> $GITHUB_OUTPUT
            echo "| --- | --- |" >> $GITHUB_OUTPUT
            cat lerna-publish-summary.json | jq -r '(.[] | @text"| \(.packageName) | \(.version) |")' >> $GITHUB_OUTPUT
            echo "$DELIMITER" >> $GITHUB_OUTPUT
        - name: Update PR comment
          uses: marocchino/sticky-pull-request-comment@v2
          with:
            message: ${{ steps.generate-message.outputs.message }}

